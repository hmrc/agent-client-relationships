{
    "microservice": "agent-client-relationships",
    "controller": "RelationshipsController",
    "apis": [
        {
            "endpoint": "GET /agent/:arn/service/:service/client/:clientIdType/:clientId",
            "description": "Checks if a relationship exists between an agent and a client for a specific service.",
            "interactions": [
                {
                    "step": 1,
                    "type": "API Call",
                    "service": "des",
                    "method": "GET",
                    "path": "/registration/relationship/arn/:arn/service/:service/id/:id",
                    "database": null,
                    "operation": null,
                    "description": "Check for a relationship in DES (Downstream ETMP System)."
                },
                {
                    "step": 2,
                    "type": "API Call",
                    "service": "if-or-hip",
                    "method": "GET",
                    "path": "/if/registration/relationship/arn/:arn/service/:service/id/:id",
                    "database": null,
                    "operation": null,
                    "description": "Check for a relationship in IF/HIP."
                },
                {
                    "step": 3,
                    "type": "API Call",
                    "service": "enrolment-store-proxy",
                    "method": "GET",
                    "path": "/enrolment-store-proxy/enrolment-store/enrolments/:enrolmentKey/groups",
                    "database": null,
                    "operation": null,
                    "description": "Check for agent's group ID against client's enrolment."
                }
            ]
        },
        {
            "endpoint": "GET /agent/relationships/inactive",
            "description": "Retrieves a list of all inactive (terminated) relationships for the authenticated agent.",
            "interactions": [
                {
                    "step": 1,
                    "type": "Database",
                    "service": null,
                    "method": null,
                    "path": null,
                    "database": "agent-client-relationships-db (invitations)",
                    "operation": "Read",
                    "description": "Find all invitations for the agent's ARN that have a status of 'Accepted' and have an 'ended' date."
                }
            ]
        },
        {
            "endpoint": "DELETE /agent/:arn/terminate",
            "description": "Terminates all of an agent's client relationships. This is a destructive, agent-initiated action.",
            "interactions": [
                {
                    "step": 1,
                    "type": "Database",
                    "service": null,
                    "method": null,
                    "path": null,
                    "database": "agent-client-relationships-db (invitations)",
                    "operation": "Read",
                    "description": "Find all active relationships for the given ARN."
                },
                {
                    "step": 2,
                    "type": "API Call",
                    "service": "enrolment-store-proxy",
                    "method": "DELETE",
                    "path": "/enrolment-store-proxy/enrolment-store/groups/:groupId/enrolments/:enrolmentKey",
                    "database": null,
                    "operation": null,
                    "description": "For each active relationship, de-allocate the client's enrolment from the agent's group."
                },
                {
                    "step": 3,
                    "type": "Database",
                    "service": null,
                    "method": null,
                    "path": null,
                    "database": "agent-client-relationships-db (invitations)",
                    "operation": "Update",
                    "description": "For each active relationship, mark the invitation as 'Accepted' and set relationship ended."
                }
            ]
        },
        {
            "endpoint": "GET /agent/:arn/client/:nino/legacy-mapped-relationship",
            "description": "Checks if a client has a legacy SA relationship in CESA and if that relationship has been mapped to the agent's ARN.",
            "interactions": [
                {
                    "step": 1,
                    "type": "API Call",
                    "service": "des",
                    "method": "GET",
                    "path": "/registration/individual/nino/:nino",
                    "database": null,
                    "operation": null,
                    "description": "Get client's SA Agent References from CESA."
                },
                {
                    "step": 2,
                    "type": "API Call",
                    "service": "agent-mapping",
                    "method": "GET",
                    "path": "/agent-mapping/mappings/sa/:arn",
                    "database": null,
                    "operation": null,
                    "description": "Get the agent's own SA Agent References from agent-mapping."
                }
            ]
        },
        {
            "endpoint": "GET /client/relationships/active",
            "description": "Retrieves all active relationships for the authenticated client across all their enrolled services.",
            "interactions": [
                {
                    "step": 1,
                    "type": "API Call",
                    "service": "hip",
                    "method": "GET",
                    "path": "/hip/relationships/agent/:arn/service/:service/client/:clientId",
                    "database": null,
                    "operation": null,
                    "description": "For each of the client's enrolled services, get the active agent relationship from HIP."
                }
            ]
        },
        {
            "endpoint": "GET /client/relationships/inactive",
            "description": "Retrieves all inactive (terminated) relationships for the authenticated client.",
            "interactions": [
                {
                    "step": 1,
                    "type": "Database",
                    "service": null,
                    "method": null,
                    "path": null,
                    "database": "agent-client-relationships-db (invitations)",
                    "operation": "Read",
                    "description": "Find all invitations for the client's identifiers that have a status of 'Accepted' and have an 'ended' date."
                }
            ]
        },
        {
            "endpoint": "GET /client/relationships/service/:service",
            "description": "Retrieves the active agent relationship for a specific service for the authenticated client.",
            "interactions": [
                {
                    "step": 1,
                    "type": "API Call",
                    "service": "hip",
                    "method": "GET",
                    "path": "/hip/relationships/agent/:arn/service/:service/client/:clientId",
                    "database": null,
                    "operation": null,
                    "description": "Get the active agent relationship from HIP for the specified service."
                }
            ]
        },
        {
            "endpoint": "GET /relationships/service/:service/client/:clientIdType/:clientId",
            "description": "Allows a Stride user to retrieve active relationships for a specific client.",
            "interactions": [
                {
                    "step": 1,
                    "type": "Database",
                    "service": null,
                    "method": null,
                    "path": null,
                    "database": "agent-client-relationships-db (relationships)",
                    "operation": "Read",
                    "description": "Find active relationships for the given client identifier and service."
                }
            ]
        }
    ]
}