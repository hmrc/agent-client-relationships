# Copyright 2020 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~

appName=agent-client-relationships

include "backend.conf"

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides MongoDb connector
play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoHmrcModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.MicroserviceModule"
play.http.filters = "uk.gov.hmrc.agentclientrelationships.wiring.MicroserviceFilters"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.http.JsonErrorHandler"

play.http.router = prod.Routes
play.modules.enabled += "MicroserviceModule"

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# Session configuration
# ~~~~~
application.session.httpOnly=false

application.session.secure=false

# The application languages
# ~~~~~
application.langs="en"

#Required for object based play2.5 applications


# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
application.router=prod.Routes


# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and 
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule. 

controllers {
    com.kenshoo.play.metrics.MetricsController = {
      needsLogging = false
      needsAuditing = false
    }

    uk.gov.hmrc.agentclientrelationships.controllers.Relationships = {
      needsLogging = false
      needsAuditing = false
    }

}


# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
    name = ${appName}
    rateUnit = SECONDS
    durationUnit = SECONDS
    showSamples = true
    jvm = true
    enabled = true
}


# Microservice specific config

auditing {
    enabled=true
    traceRequests=true
    consumer {
        baseUri {
            host = localhost
            port = 8100
        }
    }
}

microservice {
    metrics {
        graphite {
            host = graphite
            port = 2003
            prefix = play.${appName}.
            enabled = false
        }
    }

    services {

        auth {
            host=localhost
            port=8500
        }

      inactive-relationships {
        show-last-days = 30 days
      }

    }
}

Dev {

  mongodb {
    uri = "mongodb://localhost:27017/agent-client-relationships?rm.monitorRefreshMS=4000&rm.failover=default"
  }

  microservice.services {

    enrolment-store-proxy {
      host = localhost
      port = 7775
    }

    users-groups-search {
      host = localhost
      port = 9984
    }

    tax-enrolments {
      host = localhost
      port = 9995
    }

    des {
      host = localhost
      port = 9904
      environment = test
      authorization-token = secret
    }

    agent-mapping {
      host = localhost
      port = 9439
    }
  }
}

Test {

  mongodb {
    uri = "mongodb://localhost:27017/agent-client-relationships"

    failoverStrategy {
      initialDelayMsecs = 100
      retries = 10
      delay {
        factor = 1.25
        function = fibonacci
      }
    }
  }

  microservice.services {

    enrolment-store-proxy {
      host = localhost
      port = 7775
    }

    tax-enrolments {
      host = localhost
      port = 9995
    }

    users-groups-search {
      host = localhost
      port = 9984
    }

    des {
      host = localhost
      environment = test
      authorization-token = secret
    }

    agent-mapping {
      host = localhost
    }
  }
}

Prod {

  mongodb {
    uri = "mongodb://localhost:27017/agent-client-relationships"

    failoverStrategy {
      initialDelayMsecs = 100
      retries = 10
      delay {
        factor = 1.25
        function = fibonacci
      }
    }
  }

  microservice.services {

    enrolment-store-proxy {
      protocol = https
      host = enrolment-store-proxy.protected.mdtp
      port = 443
    }

    tax-enrolments {
      protocol = https
      host = tax-enrolments.protected.mdtp
      port = 443
    }

    users-groups-search {
      protocol = https
      host = users-groups-search.protected.mdtp
      port = 443
    }

    des {
      protocol = https
      host = des.ws.hmrc.gov.uk
      port = 443
      authorization-token = secret
      environment = noenv
    }

    agent-mapping {
      protocol = https
      host = agent-mapping.protected.mdtp
      port = 443
    }
  }
}

features {
  copy-relationship {
    mtd-it = true
    mtd-vat = true
  }

  recovery-enable = true
}

mongo-async-driver {
  akka {
    log-dead-letters = 0
    log-dead-letters-during-shutdown = off
    loglevel = "WARNING"
  }
}

old.auth.stride.role = "maintain%20agent%20relationships"
new.auth.stride.role = "maintain_agent_relationships"

httpHeadersWhitelist = ["X-Client-ID"]
recovery-interval = 60
recovery-timeout = 604800 # 7 days in seconds

agent.cache.size = 1000
agent.cache.expires = 1 hour
agent.cache.enabled = true